<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.3.xsd
  	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/data/jpa 
    http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd 
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
 
 	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
 
 	<context:annotation-config/>
 
	<!-- 扫描除service层外的对象注解 -->
	<context:component-scan base-package="com.qm">
		<context:exclude-filter type="aspectj" expression="com.qm..web.*"/> 
	</context:component-scan>
 
	<!-- 声明上下文环境配置 -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties" /> -->
	
	<bean id="SpringContextUtil" class="com.qm.core.util.SpringContextUtil" scope="singleton">
		<property name="dataSource" ref="dataSource" />
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
    
	<!-- 实体管理工厂 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 扫描实体包 -->
		<property name="packagesToScan" value="com.qm.**.domain">
            <!-- <array>
                <value></value>
            </array> -->
        </property>
		<!-- 持久化方案 -->
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
		</property> 
		<!-- JPA适配器 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false" />
				<property name="database" value="MYSQL"/>
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>
                <prop key="hibernate.jdbc.fetch_size">10</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider</prop>
			</props>
		</property>
	</bean>

	<!-- c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
            <value>${jdbc.driverClass}</value>
        </property>
        <property name="jdbcUrl"> 
       		 <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.userName}</value>
        </property>
        <property name="password">
           	<value>${jdbc.password}</value>
        </property>
        <property name="minPoolSize">
            <value>2</value>
        </property>
        <property name="maxPoolSize">
            <value>80</value>
        </property>
        <property name="initialPoolSize">
            <value>2</value>
        </property>
        <property name="maxIdleTime">
            <value>50</value>
        </property>
        <property name="acquireIncrement">
            <value>5</value>
        </property>
        <property name="maxStatements">
            <value>0</value>
        </property>
        <property name="checkoutTimeout">
        	<value>100</value>
        </property>  
        <!-- 每60秒检查所有连接池中的空闲连接。Default: 0  -->
        <property name="idleConnectionTestPeriod">
            <value>60</value>
        </property>
        <!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30  -->
        <property name="acquireRetryAttempts">
            <value>100</value>
        </property>
        <property name="acquireRetryDelay">
            <value>10</value>
        </property>
        <property name="breakAfterAcquireFailure">
            <value>false</value>
        </property>
        <!-- 测试连接的有效性  消耗很大 -->
        <property name="testConnectionOnCheckout">
            <value>false</value>
        </property>
        <!-- 测试连接的有效性  消耗很大 自动检测连接状况 -->
        <property name="testConnectionOnCheckin">
            <value>false</value>
        </property>
        <property name="preferredTestQuery">
            <value>SELECT 1 FROM sysuser limit 0,1</value>
        </property>
	</bean>
	
	<!-- 配置Spring Data JPA扫描目录 -->
	<jpa:repositories base-package="com.qm.**.dao" entity-manager-factory-ref="entityManagerFactory" 
		transaction-manager-ref="transactionManager" repository-impl-postfix="Impl"
		factory-class="com.qm.core.base.BaseDaoFactoryBean"/>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 启动事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- 配置方法的事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="list*" read-only="true"/>
			<tx:method name="add*" propagation="REQUIRED"  rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED"  rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED"  rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED"  rollback-for="Exception"/>
			<tx:method name="del*" propagation="REQUIRED"  rollback-for="Exception"/>
			<tx:method name="remove*" propagation="REQUIRED"  rollback-for="Exception"/>
			<tx:method name="change*" propagation="REQUIRED"  rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 切面注解 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- 配置事务的类切面 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.qm.**.service.**.*(..))" />
	</aop:config>

</beans>